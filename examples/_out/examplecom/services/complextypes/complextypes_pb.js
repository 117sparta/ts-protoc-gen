/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.examplecom.services.complextypes.OuterMessage', null, global);
goog.exportSymbol('proto.examplecom.services.complextypes.OuterMessage.InnerEnum', null, global);
goog.exportSymbol('proto.examplecom.services.complextypes.OuterMessage.InnerMessage', null, global);
goog.exportSymbol('proto.examplecom.services.complextypes.SomeEnum', null, global);
goog.exportSymbol('proto.examplecom.services.complextypes.SomeRequest', null, global);
goog.exportSymbol('proto.examplecom.services.complextypes.SomeResponse', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.examplecom.services.complextypes.OuterMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.examplecom.services.complextypes.OuterMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.examplecom.services.complextypes.OuterMessage.displayName = 'proto.examplecom.services.complextypes.OuterMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.examplecom.services.complextypes.OuterMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.examplecom.services.complextypes.OuterMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.examplecom.services.complextypes.OuterMessage} msg The msg instance to transform.
 * @return {!Object}
 */
proto.examplecom.services.complextypes.OuterMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    someString: jspb.Message.getFieldWithDefault(msg, 1, ""),
    someMessage: (f = msg.getSomeMessage()) && proto.examplecom.services.complextypes.OuterMessage.InnerMessage.toObject(includeInstance, f),
    someEnum: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.examplecom.services.complextypes.OuterMessage}
 */
proto.examplecom.services.complextypes.OuterMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.examplecom.services.complextypes.OuterMessage;
  return proto.examplecom.services.complextypes.OuterMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.examplecom.services.complextypes.OuterMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.examplecom.services.complextypes.OuterMessage}
 */
proto.examplecom.services.complextypes.OuterMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSomeString(value);
      break;
    case 2:
      var value = new proto.examplecom.services.complextypes.OuterMessage.InnerMessage;
      reader.readMessage(value,proto.examplecom.services.complextypes.OuterMessage.InnerMessage.deserializeBinaryFromReader);
      msg.setSomeMessage(value);
      break;
    case 3:
      var value = /** @type {!proto.examplecom.services.complextypes.OuterMessage.InnerEnum} */ (reader.readEnum());
      msg.setSomeEnum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.examplecom.services.complextypes.OuterMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.examplecom.services.complextypes.OuterMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.examplecom.services.complextypes.OuterMessage} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.examplecom.services.complextypes.OuterMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSomeString();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSomeMessage();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.examplecom.services.complextypes.OuterMessage.InnerMessage.serializeBinaryToWriter
    );
  }
  f = message.getSomeEnum();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.examplecom.services.complextypes.OuterMessage.InnerEnum = {
  ANOTHER_DEFAULT: 0,
  NON_DEFAULT: 1
};


/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.examplecom.services.complextypes.OuterMessage.InnerMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.examplecom.services.complextypes.OuterMessage.InnerMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.examplecom.services.complextypes.OuterMessage.InnerMessage.displayName = 'proto.examplecom.services.complextypes.OuterMessage.InnerMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.examplecom.services.complextypes.OuterMessage.InnerMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.examplecom.services.complextypes.OuterMessage.InnerMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.examplecom.services.complextypes.OuterMessage.InnerMessage} msg The msg instance to transform.
 * @return {!Object}
 */
proto.examplecom.services.complextypes.OuterMessage.InnerMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    someInt: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.examplecom.services.complextypes.OuterMessage.InnerMessage}
 */
proto.examplecom.services.complextypes.OuterMessage.InnerMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.examplecom.services.complextypes.OuterMessage.InnerMessage;
  return proto.examplecom.services.complextypes.OuterMessage.InnerMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.examplecom.services.complextypes.OuterMessage.InnerMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.examplecom.services.complextypes.OuterMessage.InnerMessage}
 */
proto.examplecom.services.complextypes.OuterMessage.InnerMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSomeInt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.examplecom.services.complextypes.OuterMessage.InnerMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.examplecom.services.complextypes.OuterMessage.InnerMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.examplecom.services.complextypes.OuterMessage.InnerMessage} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.examplecom.services.complextypes.OuterMessage.InnerMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSomeInt();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 some_int = 1;
 * @return {number}
 */
proto.examplecom.services.complextypes.OuterMessage.InnerMessage.prototype.getSomeInt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.examplecom.services.complextypes.OuterMessage.InnerMessage.prototype.setSomeInt = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string some_string = 1;
 * @return {string}
 */
proto.examplecom.services.complextypes.OuterMessage.prototype.getSomeString = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.examplecom.services.complextypes.OuterMessage.prototype.setSomeString = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional InnerMessage some_message = 2;
 * @return {?proto.examplecom.services.complextypes.OuterMessage.InnerMessage}
 */
proto.examplecom.services.complextypes.OuterMessage.prototype.getSomeMessage = function() {
  return /** @type{?proto.examplecom.services.complextypes.OuterMessage.InnerMessage} */ (
    jspb.Message.getWrapperField(this, proto.examplecom.services.complextypes.OuterMessage.InnerMessage, 2));
};


/** @param {?proto.examplecom.services.complextypes.OuterMessage.InnerMessage|undefined} value */
proto.examplecom.services.complextypes.OuterMessage.prototype.setSomeMessage = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.examplecom.services.complextypes.OuterMessage.prototype.clearSomeMessage = function() {
  this.setSomeMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.examplecom.services.complextypes.OuterMessage.prototype.hasSomeMessage = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional InnerEnum some_enum = 3;
 * @return {!proto.examplecom.services.complextypes.OuterMessage.InnerEnum}
 */
proto.examplecom.services.complextypes.OuterMessage.prototype.getSomeEnum = function() {
  return /** @type {!proto.examplecom.services.complextypes.OuterMessage.InnerEnum} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.examplecom.services.complextypes.OuterMessage.InnerEnum} value */
proto.examplecom.services.complextypes.OuterMessage.prototype.setSomeEnum = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.examplecom.services.complextypes.SomeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.examplecom.services.complextypes.SomeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.examplecom.services.complextypes.SomeRequest.displayName = 'proto.examplecom.services.complextypes.SomeRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.examplecom.services.complextypes.SomeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.examplecom.services.complextypes.SomeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.examplecom.services.complextypes.SomeRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.examplecom.services.complextypes.SomeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    someEnum: jspb.Message.getFieldWithDefault(msg, 1, 0),
    someString: jspb.Message.getFieldWithDefault(msg, 2, ""),
    mapMessageMap: (f = msg.getMapMessageMap()) ? f.toObject(includeInstance, proto.examplecom.services.complextypes.OuterMessage.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.examplecom.services.complextypes.SomeRequest}
 */
proto.examplecom.services.complextypes.SomeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.examplecom.services.complextypes.SomeRequest;
  return proto.examplecom.services.complextypes.SomeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.examplecom.services.complextypes.SomeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.examplecom.services.complextypes.SomeRequest}
 */
proto.examplecom.services.complextypes.SomeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.examplecom.services.complextypes.SomeEnum} */ (reader.readEnum());
      msg.setSomeEnum(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSomeString(value);
      break;
    case 3:
      var value = msg.getMapMessageMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readMessage, proto.examplecom.services.complextypes.OuterMessage.deserializeBinaryFromReader);
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.examplecom.services.complextypes.SomeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.examplecom.services.complextypes.SomeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.examplecom.services.complextypes.SomeRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.examplecom.services.complextypes.SomeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSomeEnum();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getSomeString();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMapMessageMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeMessage, proto.examplecom.services.complextypes.OuterMessage.serializeBinaryToWriter);
  }
};


/**
 * optional SomeEnum some_enum = 1;
 * @return {!proto.examplecom.services.complextypes.SomeEnum}
 */
proto.examplecom.services.complextypes.SomeRequest.prototype.getSomeEnum = function() {
  return /** @type {!proto.examplecom.services.complextypes.SomeEnum} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.examplecom.services.complextypes.SomeEnum} value */
proto.examplecom.services.complextypes.SomeRequest.prototype.setSomeEnum = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string some_string = 2;
 * @return {string}
 */
proto.examplecom.services.complextypes.SomeRequest.prototype.getSomeString = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.examplecom.services.complextypes.SomeRequest.prototype.setSomeString = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * map<string, OuterMessage> map_message = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!proto.examplecom.services.complextypes.OuterMessage>}
 */
proto.examplecom.services.complextypes.SomeRequest.prototype.getMapMessageMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!proto.examplecom.services.complextypes.OuterMessage>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      proto.examplecom.services.complextypes.OuterMessage));
};


proto.examplecom.services.complextypes.SomeRequest.prototype.clearMapMessageMap = function() {
  this.getMapMessageMap().clear();
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.examplecom.services.complextypes.SomeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.examplecom.services.complextypes.SomeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.examplecom.services.complextypes.SomeResponse.displayName = 'proto.examplecom.services.complextypes.SomeResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.examplecom.services.complextypes.SomeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.examplecom.services.complextypes.SomeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.examplecom.services.complextypes.SomeResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.examplecom.services.complextypes.SomeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    someMessage: (f = msg.getSomeMessage()) && proto.examplecom.services.complextypes.OuterMessage.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.examplecom.services.complextypes.SomeResponse}
 */
proto.examplecom.services.complextypes.SomeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.examplecom.services.complextypes.SomeResponse;
  return proto.examplecom.services.complextypes.SomeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.examplecom.services.complextypes.SomeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.examplecom.services.complextypes.SomeResponse}
 */
proto.examplecom.services.complextypes.SomeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.examplecom.services.complextypes.OuterMessage;
      reader.readMessage(value,proto.examplecom.services.complextypes.OuterMessage.deserializeBinaryFromReader);
      msg.setSomeMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.examplecom.services.complextypes.SomeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.examplecom.services.complextypes.SomeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.examplecom.services.complextypes.SomeResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.examplecom.services.complextypes.SomeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSomeMessage();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.examplecom.services.complextypes.OuterMessage.serializeBinaryToWriter
    );
  }
};


/**
 * optional OuterMessage some_message = 1;
 * @return {?proto.examplecom.services.complextypes.OuterMessage}
 */
proto.examplecom.services.complextypes.SomeResponse.prototype.getSomeMessage = function() {
  return /** @type{?proto.examplecom.services.complextypes.OuterMessage} */ (
    jspb.Message.getWrapperField(this, proto.examplecom.services.complextypes.OuterMessage, 1));
};


/** @param {?proto.examplecom.services.complextypes.OuterMessage|undefined} value */
proto.examplecom.services.complextypes.SomeResponse.prototype.setSomeMessage = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.examplecom.services.complextypes.SomeResponse.prototype.clearSomeMessage = function() {
  this.setSomeMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.examplecom.services.complextypes.SomeResponse.prototype.hasSomeMessage = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * @enum {number}
 */
proto.examplecom.services.complextypes.SomeEnum = {
  DEFAULT: 0,
  VALUE1: 1,
  VALUE2: 2
};

goog.object.extend(exports, proto.examplecom.services.complextypes);
